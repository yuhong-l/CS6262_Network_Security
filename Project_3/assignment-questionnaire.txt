Assignment Questionnaire
========================

NOTE: DO NOT DELETE --> and <--, and place your answers within the marks.
  Example:
    -->
      130.207.7.210, scouter.cc.gatech.edu
    <--


Info
====

Example:
  Your GT Login ID: kpark21
  Your Name: Kyuhong Park

-->
  Your GT Login ID: imalik30
  Your Name: Irfan Malik
<--

Stage 1 (20 Points)
===================

1. What is the IP address and the URL of
the command and control (C2) server of the stage1.exe malware?
(2 Points)

Example:
  IP  : 130.207.7.210
  URL : http://scouter.cc.gatech.edu/home/directory/person.php

-->
  IP  : 128.61.240.66
  URL : http://netscan.gtisc.gatech.edu/images/logo/header.php
<--


2. The malware (stage1.exe) hides itself from the task manager
by injecting itself into another process.
What is the name of this other process?
(2 Points)

Example:
  Name: asdf.exe

-->
  Name: iexplore.exe
<--

3. List down three commands which can be interpreted by the malware,
and state the start and end addresses of the command interpreting function
for each command using symbolic execution.
(12 Points)

For example
  Command 1: $COmmaND1
    Start : 0x401002 (hexadecimal number)
    End   : 0x444039
  Command 2: $cOMMand2
    Start : 0x401002
    End   : 0x44403a
  ...

-->
  Command 1: $updatE
    Start :  0x4050C0
    End   :  0X405129
  Command 2: $uninstalL
    Start : 0x4050C0
    End   : 0x40518a
  Command 3: $downloaD
    Start : 0x4050C0
    End   : 0x4051db

<--

4. Which command lets the malware download the stage 2 malware (stage2.exe)?
(2 Points)

Example:
  Command Name: $prOCeEd225

-->
  Command Name: $updatE
<--

5. Where does the stage1 malware download the stage2 malware from?
Specify the IP address and the domain name.
(2 Points)

Example:
  IP    : 143.215.130.108
  Domain: kyuhong.coc.gatech.edu (hint: use nslookup)
  (e.g., nslookup 143.215.130.108)

-->
  IP    : 128.61.240.90
  Domain:  iisp-rs-1.gtisc.gatech.edu
<--

Stage 2 (30 Points)
===================

1. What is the IP address and the URL of
the command and control (C2) server of the stage2.exe malware?
(4 Points)

Example:
  IP  : 130.207.7.210
  URL : http://scouter.cc.gatech.edu/home/people/buzz.php

-->
  IP  : 143.215.130.19
  URL : http://canof.gtisc.gatech.edu/users/login.php
<--


2. The malware (stage2.exe) hides itself from the task manager
by injecting itself into another process.
What is the name of this other process?
(2 Points)

Example:
  Name: asdf.exe

-->
  Name: calc.exe
<--

3. List down three commands which can be interpreted by the malware,
and state the start and end addresses of the command interpreting
function for each command using symbolic execution.
(12 Points)

For example
  Command 1: $COmmaND1
    Start : 0x401002
    End   : 0x444039
  Command 2: $cOMMand2
    Start : 0x401002
    End   : 0x44403a
  ...
Hint for Command 4:
  Focus on Register-related APIs.

-->
  Command 1: $Ch3ck1n0d67
    Start : 0x405200
    End   : 0x4053f0
  Command 2: $D0wNI0Ad_COM3677e
    Start : 0x405200
    End   : 0x405375
  Command 3: $uPdAte_COM27cdb
    Start : 0x405200
    End   : 0x4052f4
  Command 4: $Un1N5tAli_COM1
    Start : 0x405200
    End   : 0x40527b
<--

4. Which command creates the 'naive' directory?
(2 Points)
Example:
  Command Name: $makeNaive885

-->
  Command Name: $Ch3ck1n0d67
<--

5. After the creation of the 'naive' directory, where does the malware 
create a key (hint:RegCreateKey)? Provide the full path.

(6 Points)

Hint: Please use Procmon in ProcessMonitor. With the filter function, 
you can narrow down your scope with Process Name and Register-related APIs

For Example:
  Name: HKCU\Software\Microsoft\Ole

-->
  Name: HKCU\Software\Microsoft\Multimedia\Audio Compression Manager\Priority v4.00
<--

6. Which command lets the malware download the next malware payload (payload.exe/stage3.elf)?
(4 Points)

For Example:
  Command Name: $getNext3
  
-->
  Command Name: $D0wNI0Ad_COM3677e
<--


Linux Malware (60 Points)
=========================


1. There are many attack functions with names starting with 'attack'.
Only the ones which use '__libc_send' and '__libc_sendto' sub-functions 
are relevant attack functions here.
Write down the two attack functions actually called in the malware.
(For this step, you need to use radare2, objdump or any other 
reverse engineering tool)
(8 Points)

Example:
  function name 1 : libc.attack_his_castle
  function name 2 : gend.attack_their_base
  
-->
  function name 1 : sym.attack_udp_plain
  function name 2 : sym.attack_udp_generic
<--

2. In the provided python script, there is space to write down a single line of code
which will limit the loop to 1 run. Write down that one-liner below
(4 Points)
Example:
  CODE  : add_constraint(regs.ebx = 1) 

-->
  CODE : state.add_constraints(state.regs.al == 1)
<--


3. Similarly as in the case above, write the one line of angr script that makes 
the length of opts 0 in order to bypass a time consuming loop 
4 Points)

Example:
  CODE  : add_constraint(regs.ebx = 1) 

-->
  CODE :  state.add_constraints(state.regs.al == 0)
<--

4. Find the addresses of the next instrucions after 
'call __libc_send' and 'call __libc_sendto'.
The start address for the symbolic execution is 0x804c8fb. 
Run linux_sym_exec with start and target addresses and find the inputs.
NOTE: The command names will be strings in the format shown below.
(20 Points)

For example
  Command 1: |[abc])([de])\2\1|
    Target : 0x844039
  Command 2: $[abc])([de])\2\1
    Target : 0x85403a
  ...

-->
  Command 1: |[0-9][IP]910|
    Target : 0x08051251
  Command 2: |[0-9][IP]010|
    Target : 0x0805041b


<--


5. In the dynamicanalysis folder, there is a dynamic instruction trace named
'instrace.linux.log'. The malware keeps trying to contact the C&C server. 
Since this is unsuccessful, you will see the same functions called in a loop.
List the sequence of functions called over and over again that tries to 
establish a connection. To be able to find the loop, you need to write your own
function inside detect_loop.py. Please write the addresses of functions as a list 
(24 Points)

For example
  Function List: 0x419055, 0x499854, 0x488525, .....
  ...

-->
  Function List: 0x8053d54 , 0x8053c70 , 0x8054c73, 0x8054b6b , 0x80552a0 , 0x8053e04
<--


Android Stage 1 (55 Points)
===========================

PLEASE READ ~/Android/MaliciousMessenger/writeup.pdf FIRST!
All questions are in the writeup.pdf. Please answer the questions below.
Do not leave new lines between the Answer Markers.

4.5.1
(5 Points)
-->
KFZpbWFsaWszMApwMApTJ0tydmRxbStnWGFIZnRHVm1KQXc2S0E9PScKcDEKdHAyCi4=
<--

4.5.2
(10 Points)
-->
com.smsmessenger.IncomingSms
<--

4.5.3
(20 Points)
-->
Alright! Alright! Alright!
Two peanuts were walkin down the road. And?
One was a salted! xD
<--

4.5.4
(20 Points)
-->
8
<--


ANDROID STAGE 2 (45 Points)
===========================

PLEASE READ ~/Android/MaliciousMessenger/writeup.pdf FIRST!
All questions are in the writeup.pdf. Please answer the questions below.

4.6.1
(15 Points)
-->
000000000000000
<--

4.6.2
(10 Points)
-->
pqjd/IvdJ775wRX8IDo2TA==
<--
4.6.3
(10 Points)
-->
NYCYyTToZr8y7ZdHzWWx1A==
<--

4.6.4
(10 Points)
-->
ydEU3CgL9XqSwVcdYa29hQ==
<--
